===============================
Welcome to rescal-snow!
===============================

This installation script will help you build the rescal-snow dune simulator, run some test cases, and start exploring the world of snow dunes using our analysis, visualization, and parameter-exploration tools.

The main rescal-snow package is compiled from the C source code in 'src'.
Bash scripts for initializing, starting, and controlling runs are located in 'scripts', along with input parameter files.
Additional packages for pre- and post-processing are located in the 'utilities' and 'analysis' folders, respectively. These are written in Python 3.

We tested rescal-snow on Ubuntu 18.04 and on Lawrence Livermore National Laboratory high-performance computing resources (Linux, gcc 4.9.3) and on University of Colorado high-performance computer Summit (Linux, gcc 6.9) and on MacOSX High Sierra 10.13.4.

Yours,
Kelly Kochanski
kelly.kochanski@colorado.edu
github.com/kellykochanski

================================
Building rescal-snow
================================

1. Linux build procedure (recommended)
--------------------------------------

On a platform with access to autoconf and aclocal:
  ./autogen.sh
  ./configure
  make

This requires libraries glib-2.0, libpng, and pthread.

2. MacOSX build procedure
------------------------------

In the likely case that autoconf and aclocal are not available,
build them from source. 
As of 2019, useful instructions for this were available at:
 https://gist.github.com/justinbellamy/2672db1c78f024f2d4fe or
 http://jsdelfino.blogspot.com.au/2012/08/autoconf-and-automake-on-mac-os-x.html

rescal-snow and ReSCAL-1.6 include openmp optimizations that do not run on MacOS.
Before compiling, go into src/defs.h and comment out:
  #def PARALLEL
  #def OPENMP
if they are present.

At this point, ReSCAL may be compiled with as on Linux with:
  ./autogen.sh
  ./configure
  make

==============================================
Alternative build instructions (ReSCAL v1.6)
==============================================

The following build instructions are from ReSCAL v1.6. 
We do not guarantee that these builds are all compatible with rescal-snow.

To build ReSCAL v1.6 from the rescal-snow repository, use:
  git clone https://www.github.com/kellykochanski/rescal-snow.git
  git checkout rescal-1.6
This will remove snow functionality, including sintering and snowfall,
and introduce additional dependencies on libraries:
  glib-2.0, gtk+-2.0, gdk-pixbuf

1. AVX optimizations
---------------------
To compile with AVX optimizations, use the following syntax:
./configure --enable-avx

and pthread.

2 Clang on Mac OSX
-------------------
It is likely that your version of Clang does not support OpenMP,
in which case you'll have to install OpenMP libraries:
brew install clang-omp

Then (on Mac OS X 10.11):
export CFLAGS='-I/usr/local/include/libiomp -liomp5' 
./configure
make

Alternatively, one may discard OpenMP code by commenting out the 
OPENMP option in src/defs.h file.


3. Compiling with ICC (Intel C compiler)
----------------------------------------
To take advantage of Intel's compiler specifities, just type:
cd src
make -f makefile.icc

Note: ReSCAL seems to run faster with ICC than with GCC, at least on
Intel Xeon processors.

Tested with ICC 13.0 and 15.0 (64bits).


4. Compiling on Windows
-----------------------
The ReSCAL softwares may be compiled using Cygwin/X environment.
Web site: x.cygwin.com 

Note: Since OpenMP is not yet supported by the 32 bits version of gcc
in Cygwin, you should rather install Cygwin in 64 bits.


5. Alternative procedure
------------------------
There is a the customizable makefile located in src directory, that 
may work out of the box on most Unix-like systems.
cd src
make -f makefile.default

If errors still occur, please check the variables in makefile.default
and/or install missing libraries.

 
6. Contacts for ReSCAL 1.6
-----------------------------
Olivier Rozier - rozier@ipgpfr
Antoine Lucas - dralucas@geophysx.edu.eu.org (MacOS)
