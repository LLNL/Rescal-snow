# Installation guide

This file contains information for installing and compiling rescal-snow.

Author: Kelly Kochanski, 11 June 2019

## Code overview

The main rescal-snow package is compiled from the C source code in 'src'.
Bash scripts for initializing, starting, and controlling runs are located in 'scripts', along with input parameter files.
Additional packages for pre- and post-processing are located in the 'utilities' and 'analysis' folders, respectively. These are written in Python 3.

We tested rescal-snow on Ubuntu 18.04 and on Lawrence Livermore National Laboratory high-performance computing resources (Linux, gcc 4.9.3) and on University of Colorado high-performance computer Summit (Linux, gcc 6.9) and on MacOSX High Sierra 10.13.4.

## Standard builds

### Linux build procedure (recommended)

On a platform with access to autoconf and aclocal:
```bash
  ./autogen.sh
  ./configure
  make
```

This requires libraries glib-2.0 and pthread.

### MacOSX build procedure

In the likely case that autoconf and aclocal are not available,
build them from source. 
As of 2019, useful instructions for this were available at:
- https://gist.github.com/justinbellamy/2672db1c78f024f2d4fe or
- http://jsdelfino.blogspot.com.au/2012/08/autoconf-and-automake-on-mac-os-x.html

Rescal-snow and ReSCAL-1.6 include openmp optimizations that do not run on MacOS.
Before compiling, go into src/defs.h and comment out:
  #def PARALLEL
  #def OPENMP
if they are present.

At this point, ReSCAL may be compiled with as on Linux with:
  ./autogen.sh
  ./configure
  make

### Windows build procedure

Rescal-snow is designed to run in a linux-like environment, and we do not recommend installing it on Windows.

If you have no alternative, the most linux-like environment on Windows (at time of writing) is [Cygwin](https://www.cygwin.com/).
To run rescal-snow in Cygwin,
install 64-bit Cygwin with gcc/g++ (best obtained through the MinGW package) and glib.
Adding openssh and git will allow you to clone the github repository.
Once you have satisfied all of the rescal-snow dependencies, follow the Linux build procedure above.

We suspect that getting access to a linux machine (virtual, computing cluster, etc) will be a more effective use of your time.

## Alternative builds

###  Compatibility: running ReSCAL v1.6

To build ReSCAL v1.6 from the rescal-snow repository, use:
```bash
 git clone https://www.github.com/kellykochanski/rescal-snow.git
 git checkout rescal-1.6
```
This will remove snow functionality, including sintering and snowfall,
and introduce additional dependencies on libraries:
-  glib-2.0, gtk+-2.0, gdk-pixbuf
  
Contacts: 
 - Olivier Rozier - rozier@ipgpfr
 - Antoine Lucas - dralucas@geophysx.edu.eu.org (MacOS)

### AVX optimizations

To compile with AVX optimizations, use the following syntax:
./configure --enable-avx

and pthread.

### Clang on MacOSX

It is likely that your version of Clang does not support OpenMP,
in which case you'll have to install OpenMP libraries:
brew install clang-omp

Then (on Mac OS X 10.11):
```bash
export CFLAGS='-I/usr/local/include/libiomp -liomp5' 
./configure
make
```

Alternatively, one may discard OpenMP code by commenting out the 
OPENMP option in src/defs.h file.


### Compiling with ICC (Intel C compiler)

To compile with the intel compiler (icc):

```bash
cd src
make -f makefile.icc
```

Tested with ICC 13.0 and 15.0 (64bits) as of ReSCAL v1.6

### Reconfiguring

The ./configure script can be regenerated with autoconf and aclocal by running:
```bash
    autoreconf
    aclocal
```
    
